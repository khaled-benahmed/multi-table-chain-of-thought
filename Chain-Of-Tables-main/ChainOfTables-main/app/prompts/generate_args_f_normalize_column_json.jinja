The following provides the documentation for the `f_normalize_column()` operation using a JSON schema. You need to find its suitable parameters based on the question given and data provided, similar to the given examples.

The `f_normalize_column()` operation standardizes column names across different tables to ensure they can be properly joined or compared. Your output must be a valid JSON object with the following structure:
{
  "action": "f_normalize_column",
  "args": {
    "target_name": "<common_column_name>",
    "mappings": [
      {
        "table_name": "<table_name_1>",
        "column_name": "<column_name_1>"
      },
      {
        "table_name": "<table_name_2>",
        "column_name": "<column_name_2>"
      }
    ]
  }
}

Example 1:
Available tables:
/*
- population_table:
  Columns: Nation, Population
  Sample: USA (331 million), Canada (38 million), Japan (125 million)

- economic_table:
  Columns: Country Name, GDP
  Sample: USA (21,000 billion USD), Canada (1,800 billion USD), Japan (5,000 billion USD)
*/
Question: Compare the GDP and population of Japan.
Explanation: To join these tables for comparison, we need to normalize the country name columns that have different names. In population_table, the column is called 'Nation', and in economic_table, it's called 'Country Name'. We need to standardize both to a common name like 'Country'.
Answer:
{
  "action": "f_normalize_column",
  "args": {
    "target_name": "Country",
    "mappings": [
      {
        "table_name": "population_table",
        "column_name": "Nation"
      },
      {
        "table_name": "economic_table",
        "column_name": "Country Name"
      }
    ]
  }
}

Example 2:
Available tables:
/*
- weather_data:
  Columns: City Name, Temperature, Humidity
  Sample: Tokyo (22°C, 65%), New York (18°C, 70%), London (15°C, 80%)

- tourism_stats:
  Columns: Location, Annual Visitors, Average Stay
  Sample: Tokyo (10 million, 4 days), New York (12 million, 5 days), London (8 million, 3 days)
*/
Question: What is the relationship between temperature and tourism in these cities?
Explanation: To analyze the relationship between temperature and tourism, we need to join the weather_data and tourism_stats tables. The city names are called 'City Name' in weather_data and 'Location' in tourism_stats. We need to standardize them to a common name.
Answer:
{
  "action": "f_normalize_column",
  "args": {
    "target_name": "City",
    "mappings": [
      {
        "table_name": "weather_data",
        "column_name": "City Name"
      },
      {
        "table_name": "tourism_stats",
        "column_name": "Location"
      }
    ]
  }
}

Now find the parameters for the following case, only compatible function parameters will be accepted:
{{ available_tables }}*/
Question: {{ question }}