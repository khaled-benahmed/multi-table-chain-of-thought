Given a set of operations and their instructions, a table of information, and a question, you are required to devise a plan (as a JSON object) consisting of a sequence of the provided operations to address the question. Your plan must only contain operations from the available operations list, and the plan must always end with the <END> operation.

Your output must be a valid JSON object with the following structure:
{
  "chain": [
    {
      "action": "<operation_name>",
      "args": { "key": "value" }
    },
    {
      "action": "<operation_name>",
      "args": { "key": "value" }
    }
  ]
}

The available operations are:

1. f_select_column  
   Description: If the table only needs a few columns to answer the question, we use f_select_column() to select these columns.
   Example:  
   Table:
   /*
   ,Home Team,Home Team Score,Away Team,Away Team Score,Venue,Crowd
   0,St Kilda,13.12 (90),Melbourne,13.11 (89),Moorabbin Oval,18836
   1,South Melbourne,9.12 (66),Footscray,11.13 (79),Lake Oval,9154
   2,Richmond,20.17 (137),Fitzroy,13.22 (100),MCG,27651
   */
   Question: What are the venues and crowds for each game?
   Function call example:
   {
     "action": "f_select_column",
     "args": { "columns": ["Venue", "Crowd"] }
   }
   Explanation: The question asks for information about the venues and the crowds for each game. We select the "Venue" and "Crowd" columns.

2. f_select_row  
   Description: If the table only needs a few rows to answer the question, we use f_select_row() to select these rows.
   Example:  
   Table:
   /*
   ,Home Team,Home Team Score,Away Team,Away Team Score,Venue,Crowd
   0,St Kilda,13.12 (90),Melbourne,13.11 (89),Moorabbin Oval,18836
   1,South Melbourne,9.12 (66),Footscray,11.13 (79),Lake Oval,9154
   2,Richmond,20.17 (137),Fitzroy,13.22 (100),MCG,27651
   */
   Question: Whose home team score is higher, Richmond or St Kilda?
   Function call example:
   {
     "action": "f_select_row",
     "args": { "rows": [0, 2] }
   }
   Explanation: We select rows 0 and 2 to compare the home team scores of Richmond and St Kilda.

3. f_add_column  
   Description: If the table does not have the needed column to answer the question, we use f_add_column() to add a new column.
   Example:  
   Table:
   /*
   ,rank,lane,player,time
   0,,5,olga tereshkova (kaz),51.86
   1,,6,manjeet kaur (ind),52.17
   2,,3,asami tanno (jpn),53.04
   */
   Question: How many athletes are from Japan?
   Function call example:
   {
     "action": "f_add_column",
     "args": { "column_name": "country of athlete", "values": ["Japan", "Japan", "Japan"] }
   }
   Explanation: Since there is no column for the country of athletes, we add a column "country of athlete" with a value for each row.

4. f_sort_by  
   Description: If the question asks about the order of items in a column, we use f_sort_by() to sort the items.
   Example:  
   Table:
   /*
   ,position,club,played,points
   0,1,malaga cf,42,79
   1,10,cp merida,42,59
   2,3,cd numancia,42,73
   */
   Question: In which position did CD Numancia finish?
   Function call example:
   {
     "action": "f_sort_by",
     "args": { "column": "position", "order": "ascending" }
   }
   Explanation: We sort the rows by the "position" column in ascending order to determine the finishing position.

5. f_group_by  
   Description: If the question asks about items with the same value and the number of these items, we use f_group_by() to group the items.
   Example:  
   Table:
   /*
   ,district,name,party,residence,first served
   0,district 1,nelson albano,dem,vineland,2006
   1,district 1,robert andrzejczak,dem,middle twp.,2013
   2,district 2,john f. amodeo,rep,margate,2008
   */
   Question: How many districts are democratic?
   Function call example:
   {
     "action": "f_group_by",
     "args": { "columns": ["party"] }
   }
   Explanation: We group the rows by the "party" column to count the number of democratic districts.

6. <END>  
   Description: The terminal operation indicating the end of the plan.
   Example:
   {
     "action": "<END>",
     "args": {}
   }

Below are example plans expressed in JSON:

Example 1:
{
  "chain": [
    { "action": "f_add_column", "args": { "column_name": "Year", "values": ["2001/01/02", "2002/08/06", "2005/03/24"] } },
    { "action": "f_select_row", "args": { "rows": [1, 2] } },
    { "action": "f_select_column", "args": { "columns": ["Year", "League"] } },
    { "action": "f_sort_by", "args": { "column": "Year", "order": "ascending" } },
    { "action": "<END>", "args": {} }
  ]
}

Example 2:
{
  "chain": [
    { "action": "f_add_column", "args": { "column_name": "country of athletes", "values": ["USA", "Canada", "USA"] } },
    { "action": "f_select_row", "args": { "rows": [1, 3] } },
    { "action": "f_select_column", "args": { "columns": ["athlete", "country of athletes"] } },
    { "action": "f_group_by", "args": { "columns": ["country of athletes"] } },
    { "action": "<END>", "args": {} }
  ]
}

Example 3:
{
  "chain": [
    { "action": "f_add_column", "args": { "column_name": "points scored", "values": ["40", "30", "25", "20", "15", "11", "7", "5", "3", "1"] } },
    { "action": "f_select_column", "args": { "columns": ["when", "points scored"] } },
    { "action": "f_sort_by", "args": { "column": "points scored", "order": "ascending" } },
    { "action": "<END>", "args": {} }
  ]
}

Example 4:
{
  "chain": [
    { "action": "f_add_column", "args": { "column_name": "year", "values": ["2005", "2008", "2011"] } },
    { "action": "f_select_row", "args": { "rows": [2] } },
    { "action": "f_select_column", "args": { "columns": ["year"] } },
    { "action": "f_group_by", "args": { "columns": ["year"] } },
    { "action": "<END>", "args": {} }
  ]
}

Now, using the table and question provided below, output a valid JSON object representing the function chain according to the above schema. Do not include any additional text.

The table is as follows:
\*
{{ table }}*/
Question: {{ question }} {{ possible_next_operations_prompt }}
Function Chain: {{ chain }}